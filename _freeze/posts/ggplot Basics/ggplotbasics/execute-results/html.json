{
  "hash": "22fa2565228944f199b18accf7b7ad79",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ggplot Basics\"\nauthor: \"Owen Ellick\"\ndate: \"2025-02-11\"\ncategories: [Data Analysis]\nimage: \"ggplot.png\"\nexecute: \n  warning: false\n  message: false\n\ntoc: true\n---\n\n\n## ![](ggplot.png)\n\n# ggplot Basics\n\n## Load Necessary Library\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n## Grammar of Graphics\n\n-   A grammar of graphics is a tool that enables us to concisely describe the components of a graphic.\n\n## Aesthetic Mappings\n\n-   An aesthetic is a visual property (e.g., size, shape, color) of the objects (e.g., class) in your plot.\n-   You can display a point in different ways by changing the values of its aesthetic properties.\n\n### Adding a color to the plot ðŸŸ¥\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   color = class) )\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### Adding a shape to the plot â¬œ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   shape = class) )\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### Adding a size to the plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   size = class) )\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### Adding an alpha (transparency) to the plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   alpha = class) )\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Specifying a color to the plot ðŸŸ¦\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             color = \"blue\")\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Facets\n\n-   One way to add a variable, particularly useful for categorical variables, is to use facets to split our plot into facets, subplots that each display one subset of the data.\n\n### Facet plots using facet_wrap()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             alpha = .5) + \n  facet_wrap( . ~ class, nrow = 2)\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Geometric Objects\n\n-   A geom\\_\\*() is the geometrical object that a plot uses to represent data.\n    -   Bar charts use geom_bar();\n    -   Line charts use geom_line();\n    -   Boxplots use the geom_boxplot();\n    -   Scatterplots use the geom_point();\n    -   Fitted lines use the geom_smooth(); and many more!\n-   We can use different geom\\_\\*() to plot the same data.\n\n### Scatterplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3)\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### Fitted Lines \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy))\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## Statistical Transformation\n\n-   Many graphs, including bar charts, calculate new values to plot:\n\n    -   geom_bar(), geom_histogram(), and geom_freqpoly() bin our data and then plot bin counts, the number of observations that fall in each bin.\n\n    -   geom_boxplot() computes a summary of the distribution and then display a specially formatted box.\n\n    -   geom_smooth() fits a model to our data and then plot predictions from the model.\n\n### Histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(diamonds) +\n  geom_histogram(aes(x = price))\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### Freqpoly ðŸ“ˆ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(diamonds) +\n  geom_freqpoly(aes(x = price), \n                 bins = 200)\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### Bar Chart ðŸ“Š \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = diamonds) + \n  geom_bar(mapping = aes(x = cut))\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Position Adjustment\n\n### Color and fill aesthetic\n\n-   We can color a bar chart using either the color aesthetic, or, more usefully, fill.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 color = cut))\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### Fill\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = cut))\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Examples of ggplot in classwork ðŸ’¯\n\n### Q1c\n\n-   Recreate the R code necessary to generate plots\n\n#### Q1c(a)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=mpg, mapping=aes(x=displ, y=hwy)) + \n  geom_point(shape=19, alpha=0.4) +\n  geom_smooth(se=FALSE)\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n#### Q1c(b)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x=displ, y=hwy, group=drv)) +\n  geom_point(alpha=0.4, shape=19) +\n  geom_smooth(show.legend = FALSE, se=FALSE) \n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n#### Q1c(c)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x=displ, y=hwy, color=drv)) +\n  geom_point(alpha=0.4, shape=19) +\n  geom_smooth(se=FALSE) \n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n#### Q1c(d)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x=displ, y=hwy)) +\n  geom_point(aes(color=drv), alpha=0.4, shape = 19) + \n  geom_smooth(se=FALSE)\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n#### Q1c(e)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x=displ, y=hwy)) +\n  geom_point(aes(color=drv), alpha=0.4, shape=19) +\n  geom_smooth(aes(linetype = drv), se=FALSE)\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n#### Q1c(f)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x=displ, y=hwy, color=drv)) +\n  geom_point(size=6, alpha=0.6, shape=19, color=\"transparent\") +\n  geom_point(size=3, alpha=0.4, shape=19)\n```\n\n::: {.cell-output-display}\n![](ggplotbasics_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n-   Congratulations on learning the ggplot basics! âœ…\n",
    "supporting": [
      "ggplotbasics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}